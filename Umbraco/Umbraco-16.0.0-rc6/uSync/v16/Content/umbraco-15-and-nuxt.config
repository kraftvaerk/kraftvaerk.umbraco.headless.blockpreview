<?xml version="1.0" encoding="utf-8"?>
<Content Key="9a2216fb-6e53-41ba-9552-67bab9a2613f" Alias="Umbraco 15 and Nuxt" Level="3">
  <Info>
    <Parent Key="0b1658c6-b859-49e9-b4f1-a213a1a69c48">blog</Parent>
    <Path>/kjeldsendev/blog/Umbraco15AndNuxt</Path>
    <Trashed>false</Trashed>
    <ContentType>blogPostPage</ContentType>
    <CreateDate>2025-04-16T11:05:20</CreateDate>
    <NodeName Default="Umbraco 15 and Nuxt" />
    <SortOrder>0</SortOrder>
    <Published Default="true" />
    <Schedule />
    <Template />
  </Info>
  <Properties>
    <cachePage>
      <Value><![CDATA[1]]></Value>
    </cachePage>
    <childKeys>
      <Value><![CDATA[]]></Value>
    </childKeys>
    <grid>
      <Value><![CDATA[{
  "contentData": [
    {
      "contentTypeKey": "387fbbea-8c41-4019-ac76-c3e6e590f6e1",
      "key": "b583e790-85c6-424f-bbc0-5ed948915ee1",
      "udi": null,
      "values": [
        {
          "alias": "richText",
          "culture": null,
          "editorAlias": null,
          "segment": null,
          "value": {
            "markup": "\u003Cp\u003EI have read a lot of blog posts about Umbraco and Next, or Nuxt, or Astro, and been to even more talks about it.\u003C/p\u003E\u003Cp\u003EMy impression is, that while all of them deal with the essentials of headless; You have your Content Delivery Api, your frontend, maybe some auto client generation through swagger.\u003C/p\u003E\u003Cp\u003EAll of them (that I\u0027ve seen) seem to skip over what I think is one of the most important parts of headless.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cem\u003EWhat makes headless useful?\u003C/em\u003E\u003C/strong\u003E\u003C/p\u003E",
            "blocks": {
              "contentData": [],
              "settingsData": [],
              "expose": [],
              "Layout": {}
            }
          }
        }
      ]
    },
    {
      "contentTypeKey": "5e0f13c0-0cdd-4f72-b19d-64b815aec0bb",
      "key": "a95b732a-6ba7-4fc3-a73b-1e59a3753582",
      "udi": null,
      "values": []
    },
    {
      "contentTypeKey": "387fbbea-8c41-4019-ac76-c3e6e590f6e1",
      "key": "54684efe-2628-4049-bc4a-0e1ae80ba0c2",
      "udi": null,
      "values": [
        {
          "alias": "richText",
          "culture": null,
          "editorAlias": null,
          "segment": null,
          "value": {
            "markup": "\u003Cp\u003EThe above EKG polls the CMS every second for a heartbeat. I now give you (dear reader) the ability to murder the CMS for 30 seconds. And I invite you to try to navigate the website while it\u0027s down.\u003Cbr\u003E\u003Cbr\u003EYou are also welcome to try to visit the CMS while it\u0027s down to check I\u0027m not faking it.\u003C/p\u003E\u003Cp\u003E\u003Ca target=\u0022_blank\u0022 data-router-slot=\u0022disabled\u0022 href=\u0022https://localhost:44375/umbraco\u0022 title=\u0022localhost\u0022 type=\u0022external\u0022\u003ECMS LINK\u003C/a\u003E\u003C/p\u003E",
            "blocks": {
              "contentData": [],
              "settingsData": [],
              "expose": [],
              "Layout": {}
            }
          }
        }
      ]
    },
    {
      "contentTypeKey": "9ff4c671-8cde-477e-86ec-1032ed4e0bd4",
      "key": "3a11215b-37a3-410a-9fcc-9934b55fedba",
      "udi": null,
      "values": []
    },
    {
      "contentTypeKey": "f618abe7-aaac-4ad7-927c-4d39b15c975d",
      "key": "d3b36f52-d649-492d-935a-c8784d2fbc48",
      "udi": null,
      "values": [
        {
          "alias": "code",
          "culture": null,
          "editorAlias": null,
          "segment": null,
          "value": "# pages/[...slug].vue\r\n\u0060\u0060\u0060vue\r\n\u003Cscript setup lang=\u0022ts\u0022\u003E\r\nimport { useRoute } from \u0022vue-router\u0022;\r\nimport { watchEffect } from \u0022vue\u0022;\r\nimport type {\r\n  SeoCompositionContentResponseModel,\r\n  NavigationCompositionContentResponseModel,\r\n  IApiContentResponseModel,\r\n} from \u0022~/server/delivery-api\u0022;\r\n\r\n\r\nconst route = useRoute();\r\nconst slug = toValue((route.params.slug as string[]) || []);\r\nconst apiPath = \u0022/api/content/\u0022 \u002B \u0022/\u0022 \u002B slug.join(\u0022/\u0022);\r\n\r\nconst { data } = await useFetch\u003CIApiContentResponseModel\u003E(apiPath, {\r\n  server: true, cache: \u0022no-cache\u0022\r\n});\r\n\r\n\r\nconst { data: navigation } =\r\n  await useFetch\u003CNavigationCompositionContentResponseModel\u003E(\r\n    \u0022/api/content/navigation\u0022,\r\n    { server: true, cache: \u0022no-cache\u0022 }\r\n  );\r\n\r\nwatchEffect(() =\u003E {\r\n  if (data.value) {\r\n    const seo = data.value as SeoCompositionContentResponseModel;\r\n    useHead({\r\n      title: seo.properties.seoTitle ?? data.value?.name,\r\n    });\r\n  }\r\n});\r\n\r\nif (navigation.value?.properties.cacheKeys) {\r\n  const cacheKeys = navigation.value.properties.cacheKeys || [];\r\n  const tags = [\u0022reset\u0022, ...cacheKeys];\r\n  \r\n  useRouteCache((helper) =\u003E {\r\n    helper\r\n      .setMaxAge(3600 * 24)\r\n      .setCacheable()\r\n      .addTags(tags);\r\n  });\r\n  \r\n}\r\n\u003C/script\u003E\r\n\u0060\u0060\u0060"
        }
      ]
    },
    {
      "contentTypeKey": "1495d116-fbc6-4c94-905d-65c841fe85d0",
      "key": "a39b4b47-6758-40c8-a4da-1e939bbf2d44",
      "udi": null,
      "values": [
        {
          "alias": "image",
          "culture": null,
          "editorAlias": null,
          "segment": null,
          "value": [
            {
              "key": "d1e4e378-e5ff-4b7c-80b5-fa110afb3ce8",
              "mediaKey": "de091431-a5ec-48a5-83da-17c849fa61e7",
              "mediaTypeAlias": "",
              "crops": [],
              "focalPoint": null
            }
          ]
        }
      ]
    },
    {
      "contentTypeKey": "387fbbea-8c41-4019-ac76-c3e6e590f6e1",
      "key": "35e6d706-edb1-432e-beda-43c5341ec364",
      "udi": null,
      "values": [
        {
          "alias": "richText",
          "culture": null,
          "editorAlias": null,
          "segment": null,
          "value": {
            "markup": "\u003Cp\u003ESure, you have reusable components, and de-coupling from your CMS to a stack of your choice, but what happens if your CMS goes down? Or is slow to respond?\u003C/p\u003E",
            "blocks": {
              "contentData": [],
              "settingsData": [],
              "expose": [],
              "Layout": {}
            }
          }
        }
      ]
    },
    {
      "contentTypeKey": "387fbbea-8c41-4019-ac76-c3e6e590f6e1",
      "key": "d9facbd4-2c94-43c7-ad03-a4f4d8e052af",
      "udi": null,
      "values": [
        {
          "alias": "richText",
          "culture": null,
          "editorAlias": null,
          "segment": null,
          "value": {
            "markup": "\u003Cp\u003E\u003Cstrong\u003EIf your CMS goes down, the frontend should keep running!\u003C/strong\u003E\u003Cbr\u003E\u003Cbr\u003ESpeaking of... Is the frontend running?\u003C/p\u003E",
            "blocks": {
              "contentData": [],
              "settingsData": [],
              "expose": [],
              "Layout": {}
            }
          }
        }
      ]
    },
    {
      "contentTypeKey": "387fbbea-8c41-4019-ac76-c3e6e590f6e1",
      "key": "8599db86-b386-456d-9491-3fb46688b337",
      "udi": null,
      "values": [
        {
          "alias": "richText",
          "culture": null,
          "editorAlias": null,
          "segment": null,
          "value": {
            "markup": "\u003Ch2\u003EOk, so it works - what now?\u003C/h2\u003E\u003Cp\u003EWell - now we need to talk about cache-invalidation.\u003C/p\u003E\u003Cp\u003EIt\u0027s not particularly sexy, and it\u0027s not easy. The big running joke is there are two hard things in software-developement. Naming things and cache-invalidation. We are going to attempt BOTH.\u003C/p\u003E\u003Cp\u003EThere are several strategies, all applicable but not all equially elegant (if you ask me).\u003C/p\u003E\u003Cp\u003EYou can do time based caching (ie. your page stays the same for 30 sec - 10 minutes or whatever) and you can combine with all kinds of fun stuff like SWR (Stale While Revalidate) and more.\u003C/p\u003E\u003Cp\u003EYou can do route based caching, for instance with webooks. (If I update this blogpost in the CMS, we invalidate this route in the frontend)\u003C/p\u003E\u003Cp\u003EOr you can do what I\u0027ve done on this site.\u003C/p\u003E",
            "blocks": {
              "contentData": [],
              "settingsData": [],
              "expose": [],
              "Layout": {}
            }
          }
        }
      ]
    },
    {
      "contentTypeKey": "1495d116-fbc6-4c94-905d-65c841fe85d0",
      "key": "1abbfc2f-4e20-43bf-98be-2701754e329e",
      "udi": null,
      "values": [
        {
          "alias": "image",
          "culture": null,
          "editorAlias": null,
          "segment": null,
          "value": [
            {
              "key": "ef1700b6-41d0-4721-9733-284e4f05b7ad",
              "mediaKey": "de091431-a5ec-48a5-83da-17c849fa61e7",
              "mediaTypeAlias": "",
              "crops": [],
              "focalPoint": null
            }
          ]
        }
      ]
    },
    {
      "contentTypeKey": "387fbbea-8c41-4019-ac76-c3e6e590f6e1",
      "key": "d3060744-e4be-4b59-8a7b-e2b3e81bec01",
      "udi": null,
      "values": [
        {
          "alias": "richText",
          "culture": null,
          "editorAlias": null,
          "segment": null,
          "value": {
            "markup": "\u003Cp\u003ELook at the example above. In a route caching based example, how do you keep track of all dependencies?\u003C/p\u003E\u003Cp\u003EWhat if I change the writers name, or replace one of the images with a different one? Why, you\u0027d need some sort of dependency list for the content from the content delivery api!\u003C/p\u003E",
            "blocks": {
              "contentData": [],
              "settingsData": [],
              "expose": [],
              "Layout": {}
            }
          }
        }
      ]
    },
    {
      "contentTypeKey": "1495d116-fbc6-4c94-905d-65c841fe85d0",
      "key": "854742b5-f04a-4ad2-b3a8-3aca52afe35f",
      "udi": null,
      "values": [
        {
          "alias": "image",
          "culture": null,
          "editorAlias": null,
          "segment": null,
          "value": [
            {
              "key": "94e00086-3bf7-4d3c-a34d-a3a5ce7e646d",
              "mediaKey": "de091431-a5ec-48a5-83da-17c849fa61e7",
              "mediaTypeAlias": "",
              "crops": [],
              "focalPoint": null
            }
          ]
        }
      ]
    },
    {
      "contentTypeKey": "387fbbea-8c41-4019-ac76-c3e6e590f6e1",
      "key": "6d3a1027-28f0-4351-9d72-3d7d1c5ce862",
      "udi": null,
      "values": [
        {
          "alias": "richText",
          "culture": null,
          "editorAlias": null,
          "segment": null,
          "value": {
            "markup": "\u003Cp\u003EDo you notice that \u0022cachekeys\u0022 key in the above image? That\u0027s how! We expand Umbraco\u0027s Content Delivery Api to include a cache key for every dependency a piece of content has. In the frontend, we tag the router, or api call, or WHATEVER we are doing with these keys, and as long as we have a proper purge endpoint we can send cache keys to. Well, then everything is taken care of for us!\u003Cbr\u003E\u003Cbr\u003EAs I\u0027m running out of time and thought I would present this in August and not today (29th of April), please enjoy some code, as I don\u0027t have time to finish this blog post.\u003C/p\u003E",
            "blocks": {
              "contentData": [],
              "settingsData": [],
              "expose": [],
              "Layout": {}
            }
          }
        }
      ]
    },
    {
      "contentTypeKey": "f618abe7-aaac-4ad7-927c-4d39b15c975d",
      "key": "4628f5e1-16e0-4060-8acb-41d3b2bae0d6",
      "udi": null,
      "values": [
        {
          "alias": "code",
          "culture": null,
          "editorAlias": null,
          "segment": null,
          "value": "# server/api/content/[...slug].ts\r\n\u0060\u0060\u0060ts\r\nimport { DeliveryClient } from \u0027@/server/delivery-api\u0027;\r\nimport { useRuntimeConfig } from \u0027#imports\u0027;\r\n\r\nexport default defineEventHandler(async (event) =\u003E {\r\n  console.log(\u0022Fetching content for slug:\u0022, event.context.params?.slug);\r\n  const config = useRuntimeConfig();\r\n  const { slug } = event.context.params!;\r\n\r\n  const api = new DeliveryClient({\r\n    BASE: config.public.cmsHost,\r\n  });\r\n\r\n  try {\r\n    const response = await api.content.getContentItemByPath20({\r\n      apiKey: config.deliveryKey,\r\n      path: \u0027/\u0027 \u002B slug, // Assuming slug is the path here\r\n    });\r\n\r\n    if (!response) {\r\n      throw createError({\r\n        statusCode: 404,\r\n        statusMessage: \u0027Content not found\u0027,\r\n      });\r\n    }\r\n\r\n    return response;\r\n  } catch (e) {\r\n    console.error(\u0060Failed to fetch content for slug \u0022${slug}\u0022\u0060, e);\r\n    throw createError({\r\n      statusCode: 500,\r\n      statusMessage: \u0027Failed to fetch content\u0027,\r\n    });\r\n  }\r\n});\r\n\u0060\u0060\u0060"
        }
      ]
    }
  ],
  "settingsData": [],
  "expose": [
    {
      "contentKey": "b583e790-85c6-424f-bbc0-5ed948915ee1",
      "culture": null,
      "segment": null
    },
    {
      "contentKey": "a95b732a-6ba7-4fc3-a73b-1e59a3753582",
      "culture": null,
      "segment": null
    },
    {
      "contentKey": "54684efe-2628-4049-bc4a-0e1ae80ba0c2",
      "culture": null,
      "segment": null
    },
    {
      "contentKey": "3a11215b-37a3-410a-9fcc-9934b55fedba",
      "culture": null,
      "segment": null
    },
    {
      "contentKey": "d3b36f52-d649-492d-935a-c8784d2fbc48",
      "culture": null,
      "segment": null
    },
    {
      "contentKey": "a39b4b47-6758-40c8-a4da-1e939bbf2d44",
      "culture": null,
      "segment": null
    },
    {
      "contentKey": "35e6d706-edb1-432e-beda-43c5341ec364",
      "culture": null,
      "segment": null
    },
    {
      "contentKey": "d9facbd4-2c94-43c7-ad03-a4f4d8e052af",
      "culture": null,
      "segment": null
    },
    {
      "contentKey": "8599db86-b386-456d-9491-3fb46688b337",
      "culture": null,
      "segment": null
    },
    {
      "contentKey": "1abbfc2f-4e20-43bf-98be-2701754e329e",
      "culture": null,
      "segment": null
    },
    {
      "contentKey": "d3060744-e4be-4b59-8a7b-e2b3e81bec01",
      "culture": null,
      "segment": null
    },
    {
      "contentKey": "854742b5-f04a-4ad2-b3a8-3aca52afe35f",
      "culture": null,
      "segment": null
    },
    {
      "contentKey": "6d3a1027-28f0-4351-9d72-3d7d1c5ce862",
      "culture": null,
      "segment": null
    },
    {
      "contentKey": "4628f5e1-16e0-4060-8acb-41d3b2bae0d6",
      "culture": null,
      "segment": null
    }
  ],
  "Layout": {
    "Umbraco.BlockGrid": [
      {
        "areas": [],
        "columnSpan": 12,
        "contentKey": "b583e790-85c6-424f-bbc0-5ed948915ee1",
        "contentUdi": null,
        "rowSpan": 1,
        "settingsKey": null,
        "settingsUdi": null
      },
      {
        "areas": [],
        "columnSpan": 6,
        "contentKey": "a39b4b47-6758-40c8-a4da-1e939bbf2d44",
        "contentUdi": null,
        "rowSpan": 1,
        "settingsKey": null,
        "settingsUdi": null
      },
      {
        "areas": [],
        "columnSpan": 6,
        "contentKey": "35e6d706-edb1-432e-beda-43c5341ec364",
        "contentUdi": null,
        "rowSpan": 1,
        "settingsKey": null,
        "settingsUdi": null
      },
      {
        "areas": [],
        "columnSpan": 12,
        "contentKey": "d9facbd4-2c94-43c7-ad03-a4f4d8e052af",
        "contentUdi": null,
        "rowSpan": 1,
        "settingsKey": null,
        "settingsUdi": null
      },
      {
        "areas": [],
        "columnSpan": 12,
        "contentKey": "a95b732a-6ba7-4fc3-a73b-1e59a3753582",
        "contentUdi": null,
        "rowSpan": 1,
        "settingsKey": null,
        "settingsUdi": null
      },
      {
        "areas": [],
        "columnSpan": 6,
        "contentKey": "54684efe-2628-4049-bc4a-0e1ae80ba0c2",
        "contentUdi": null,
        "rowSpan": 1,
        "settingsKey": null,
        "settingsUdi": null
      },
      {
        "areas": [],
        "columnSpan": 6,
        "contentKey": "3a11215b-37a3-410a-9fcc-9934b55fedba",
        "contentUdi": null,
        "rowSpan": 1,
        "settingsKey": null,
        "settingsUdi": null
      },
      {
        "areas": [],
        "columnSpan": 12,
        "contentKey": "8599db86-b386-456d-9491-3fb46688b337",
        "contentUdi": null,
        "rowSpan": 1,
        "settingsKey": null,
        "settingsUdi": null
      },
      {
        "areas": [],
        "columnSpan": 12,
        "contentKey": "1abbfc2f-4e20-43bf-98be-2701754e329e",
        "contentUdi": null,
        "rowSpan": 1,
        "settingsKey": null,
        "settingsUdi": null
      },
      {
        "areas": [],
        "columnSpan": 12,
        "contentKey": "d3060744-e4be-4b59-8a7b-e2b3e81bec01",
        "contentUdi": null,
        "rowSpan": 1,
        "settingsKey": null,
        "settingsUdi": null
      },
      {
        "areas": [],
        "columnSpan": 12,
        "contentKey": "854742b5-f04a-4ad2-b3a8-3aca52afe35f",
        "contentUdi": null,
        "rowSpan": 1,
        "settingsKey": null,
        "settingsUdi": null
      },
      {
        "areas": [],
        "columnSpan": 12,
        "contentKey": "6d3a1027-28f0-4351-9d72-3d7d1c5ce862",
        "contentUdi": null,
        "rowSpan": 1,
        "settingsKey": null,
        "settingsUdi": null
      },
      {
        "areas": [],
        "columnSpan": 12,
        "contentKey": "d3b36f52-d649-492d-935a-c8784d2fbc48",
        "contentUdi": null,
        "rowSpan": 1,
        "settingsKey": null,
        "settingsUdi": null
      },
      {
        "areas": [],
        "columnSpan": 12,
        "contentKey": "4628f5e1-16e0-4060-8acb-41d3b2bae0d6",
        "contentUdi": null,
        "rowSpan": 1,
        "settingsKey": null,
        "settingsUdi": null
      }
    ]
  }
}]]></Value>
    </grid>
    <noSlug>
      <Value><![CDATA[]]></Value>
    </noSlug>
    <seoDescription>
      <Value><![CDATA[Umbraco Meets Nuxt, Meets Caching]]></Value>
    </seoDescription>
    <seoListImage>
      <Value><![CDATA[[
  {
    "key": "0aaf8409-e392-4f20-af03-fde467447471",
    "mediaKey": "6d26d231-e8d1-4bd9-ac74-3cb8542f5861",
    "mediaTypeAlias": "Image",
    "crops": [],
    "focalPoint": null
  }
]]]></Value>
    </seoListImage>
    <seoPublishingDate>
      <Value><![CDATA[2025-04-20T00:00:00]]></Value>
    </seoPublishingDate>
    <seoTitle>
      <Value><![CDATA[Umbraco 15 and Nuxt]]></Value>
    </seoTitle>
    <writer>
      <Value><![CDATA[umb://document/df0c2388df3c4126bc32640f87a66292]]></Value>
    </writer>
  </Properties>
</Content>